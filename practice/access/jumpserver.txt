===================================================================
1. You can use the following command to start, and then visit
cd /root/jumpserver/jumpserver-installer-v2.28.5
./jmsctl.sh start

2. Other management commands
./jmsctl.sh stop
./jmsctl.sh restart
./jmsctl.sh backup
./jmsctl.sh upgrade
For more commands, you can enter ./jmsctl.sh --help to understand

3. Web access
http://10.0.2.15:80
Default username: admin  Default password: admin

4. SSH/SFTP access
ssh -p2222 admin@10.0.2.15
sftp -P2222 admin@10.0.2.15

5. More information
Official Website: https://www.jumpserver.org/
Documentation: https://docs.jumpserver.org/

====================================================================
# Начиная с версии 2.6, JumpServer унифицировал * * Community Edition * * и * * Enterprise Edition * * Installation Deployment Packages, которые поддерживаются этим проектом.

установка, развертывание, обновление, управление JumpServer

# # Зависимость от окружающей среды
- Linux x86_64
- ядро, превышающее 4,0

# # Развертывание установки

```bash
# Установка, версия указана в static.env
$ ./jmsctl.sh install
```

## Автономная установка

[Загрузите пакет автономной установки из сообщества](https://community.fit2cloud.com/#/products/jumpserver/downloads)


## управлять

```
# запускать
$ ./jmsctl.sh start

# Перезапуск
$ ./jmsctl.sh restart

# Закрыть, не включать базу данных
$ ./jmsctl.sh stop

# Закрыть все
$ ./jmsctl.sh down

# резервная база данных
$ ./jmsctl.sh backup_db

# Посмотреть журнал
$ ./jmsctl.sh tail

```

## Описание файла конфигурации

Файл конфигурации будет помещен в /opt/jumpserver/config.

```
[root@localhost config]# tree .
.
├── config.txt       # основной файл конфигурации
├── mysql
│   └── my.cnf       # mysql Конфигурационный файл
|── mariadb
|   └── mariadb.cnf  # mariadb Конфигурационный файл
├── nginx            # nginx Конфигурационный файл
│   ├── cert
│   │   ├── server.crt
│   │   └── server.key
│   ├── lb_http_server.conf
│   └── lb_ssh_server.conf
├── README.md
└── redis
    └── redis.conf  # redis Конфигурационный файл

6 directories, 11 files
```

### config.txt Описание

Файл config.txt — это файл конфигурации переменной среды, который будет висеть в каждом контейнере. Это избавляет от необходимости задавать отдельные файлы конфигурации для koko, core и Lion.

config-example.txt содержит инструкции, вы можете обратиться к [Документу с описанием параметров JumpServer] (https://docs.jumpserver.org/zh/master/admin-guide/env/).

----------------------------------------------------------------

# config:
cat /opt/jumpserver/config/config.txt
Пример конфигурационного файла JumpServer.
#
# Если вы не понимаете цель, вы можете пропустить изменение этого профиля и система автоматически заполнит
# Полная документация https://docs.jumpserver.org/zh/v3/guide/env/

Mirror configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Внутреннее соединение docker.io будет тайм-аут или скачать медленнее, включите этот параметр, используя Huawei Cloud Image Acceleration
# Замените старую версию DOCKER_IMAGE_PREFIX
#
# DOCKER_IMAGE_MIRROR=1

Правила Зеркала Всегда, IfNotPresent
Всегда указывает, что последнее зеркало вытаскивается каждый раз, и IfNotPresent указывает, что зеркало не существует локально
#
# IMAGE_PULL_POLICY=Always

Installation Configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# JumpServer база данных сохранения каталог, запись, журналы задач по умолчанию
Пожалуйста, измените файлы базы данных (.sql) и файлы конфигурации, которые резервируются во время обновления в каталог.
#
VOLUME_DIR=/var/lib/jumpserver

# Ключ шифрования, миграция Убедитесь, что SECRET_КЛЮЧ согласуется со старой средой, не используйте специальные строки
# (*) Предупреждение: Держите это значение в секрете.
# (*) Не раскрывать никому SECRET_KEY
#
SECRET_KEY=86d4ec24f52a9b06195823820a5fe2976902b743b6d30825

# Компоненты регистрируются с ядром, чтобы использовать токен, мигрировать, чтобы сохранить BOOTSTRAP_TOKEN в соответствии со старой средой.
Не использовать специальные строки
# (*) Предупреждение: Держите это значение в секрете.
# (*) Не раскрывать никому BOOTSTRAP_TOKEN
#
BOOTSTRAP_TOKEN=cFLlWQAGDD0Fe3qjNAklCExx

# Информация об уровне журнала, ПРЕДУПРЕЖДЕНИЕ, ОШИБКА
#
LOG_LEVEL=ERROR

# JumpServer контейнер использует сегмент сети, не конфликтовать с существующей сетью, в соответствии с фактической ситуацией их собственной модификации
#
DOCKER_SUBNET=192.168.250.0/24

# ipv6nat, нет необходимости открывать нормально
# Если хост не поддерживает ipv6 Включение этой опции приведет к невозможности получить реальный IP-адрес клиента
#
USE_IPV6=0
DOCKER_SUBNET_IPV6=fc00:1010:1111:200::/64

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # MySQL configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #/# #/# # #/# # # # # # # # # # #/////# # # # # # # # # # # # # #
# Внешний MySQL должен ввести правильную информацию MySQL, встроенная система MySQL будет автоматически обрабатывать
# (*) Раздел пароля не должен содержать одиночные и двойные кавычки
#
DB_HOST=mysql
DB_PORT=3306
DB_USER=root
DB_PASSWORD=86d4ec24f52a9b06195823820a
DB_NAME=jumpserver

# Если для внешнего MySQL требуется TLS/SSL соединение, обратитесь к https: //docs.jumpserver.org/zh/v3/installation/security_setup/mysql_ssl//
#
# DB_USE_SSL=true

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # Redis configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # Redis configured
Пожалуйста, введите нужную информацию Redis, и встроенная система Redis будет обрабатывать ее автоматически
# (*) Раздел пароля не должен содержать одиночные и двойные кавычки
#
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=86d4ec24f52a9b06195823820a

Если вы используете внешний Redis Sentinel, пожалуйста, заполните вручную следующее
#
# REDIS_SENTINEL_HOSTS=mymaster/192.168.100.1:26379,192.168.100.1:26380,192.168.100.1:26381
# REDIS_SENTINEL_PASSWORD=your_sentinel_password
# REDIS_PASSWORD=your_redis_password
# REDIS_SENTINEL_SOCKET_TIMEOUT=5

# Если внешнему Redis необходимо открыть соединение TLS/SSL, обратитесь к https: //docs.jumpserver.org/zh/v3/installation/security_setup/redis_ssl//
#
# REDIS_USE_SSL=true

Access configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Порт внешней службы, если конфликт с существующей службой, пожалуйста, измените себя
#
HTTP_PORT=80
SSH_PORT=2222
MAGNUS_MYSQL_PORT=33061
MAGNUS_MARIADB_PORT=33062
MAGNUS_REDIS_PORT=63790
MAGNUS_POSTGRESQL_PORT=54320
MAGNUS_SQLSERVER_PORT=14330
MAGNUS_ORACLE_PORTS=30000-30030

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # HTTPS configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Рассмотрим https://docs.jumpserver.org/zh/v3/installation/proxy/ Распределение
#
# HTTPS_PORT=443
# SERVER_NAME=your_domain_name
# SSL_CERTIFICATE=your_cert
# SSL_CERTIFICATE_KEY=your_cert_key
#

# Nginx размер загрузки файла ограничение загрузки
#
CLIENT_MAX_BODY_SIZE=4096m

Component configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
Регистрация компонентов, базовая регистрация контейнеров по умолчанию, среда кластера должна быть изменена на адрес VIP кластера
#
CORE_HOST=http://core:8080
PERIOD_TASK_ENABLE=true

# Определение основной сессии,
# SESSION_COOKIE_AGE показывает, сколько секунд после окончания сеанса простоя,
# SESSION_EXPIRE_AT_BROWSER_CLOSE=true указывает, что сессия истекает, когда браузер закрыт
#
# SESSION_COOKIE_AGE=86400
SESSION_EXPIRE_AT_BROWSER_CLOSE=true

# Доверенные определения ДОМЕНОВ,
Определите IP доверенный доступ, пожалуйста, измените его в соответствии с фактической ситуацией. Если это открытый IP, измените его на соответствующий общедоступный IP.
# DOMAINS="demo.jumpserver.org:443"
# DOMAINS="172.17.200.191:80"
# DOMAINS="demo.jumpserver.org:443,172.17.200.191:80"
DOMAINS=

# Настроить компоненты, которые не нужно запускать, все компоненты открываются по умолчанию, и если вам не нужен компонент, вы можете закрыть их, установив {имя компонента} _. ВКЛЮЧЕНО до 0
# CORE_ENABLE=0
# CELERY_ENABLE=0
# KOKO_ENABLE=0
# LION_ENABLE=0
# MAGNUS_ENABLE=0
# CHEN_ENABLE=0
# KAEL_ENABLE=0
# PANDA_ENABLE=0

# Lion Включите сглаживание шрифтов для оптимизации опыта
#
JUMPSERVER_ENABLE_FONT_SMOOTHING=true

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # XPack configuration # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Пакет XPack, установка версии с открытым исходным кодом недопустима
#
RDP_PORT=3389
XRDP_PORT=3390

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # Other configurations # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# Терминал использует идентификатор хоста HOSTNAME для автоматического создания первой установки
#
SERVER_HOSTNAME=jump

Используйте встроенный SLB и установите USE_LB на 0, если веб-страница получает неправильный IP-адрес клиента
# Когда USE_LB установлен на 1, используйте конфигурацию proxy_set_header X-Forwarded-For $ remote _ addr
# USE_LB Если установлено 0, используйте конфигурацию proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for
USE_LB=1

Текущий номер версии JumpServer, автоматически созданный после установки и обновления
#
CURRENT_VERSION=v3.10.7

====================================================================

cat compose/docker-compose-app.yml
version: '2.4'

services:
  core:
    image: jumpserver/core:${VERSION}
    container_name: jms_core
    ulimits:
      core: 0
    restart: always
    tty: true
    command: start web
    env_file:
      - ${CONFIG_FILE}
    volumes:
      - ${CONFIG_DIR}/core/config.yml:/opt/jumpserver/config.yml
      - ${VOLUME_DIR}/core/data:/opt/jumpserver/data
      - ${VOLUME_DIR}/core/logs:/opt/jumpserver/logs
    healthcheck:
      test: "curl -fsL http://localhost:8080/api/health/ > /dev/null"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    networks:
      - net

  koko:
    image: jumpserver/koko:${VERSION}
    container_name: jms_koko
    ulimits:
      core: 0
    restart: always
    tty: true
    env_file:
      - ${CONFIG_FILE}
    ports:
      - ${SSH_PORT}:2222
    volumes:
      - ${CONFIG_DIR}/koko/config.yml:/opt/koko/config.yml
      - ${VOLUME_DIR}/koko/data:/opt/koko/data
    depends_on:
      core:
        condition: service_healthy
    privileged: true
    healthcheck:
      test: "curl -fsL http://localhost:5000/koko/health/ > /dev/null"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - net

  lion:
    image: jumpserver/lion:${VERSION}
    container_name: jms_lion
    ulimits:
      core: 0
    restart: always
    tty: true
    env_file:
      - ${CONFIG_FILE}
    volumes:
      - ${VOLUME_DIR}/lion/data:/opt/lion/data
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "curl -fsL http://localhost:8081/lion/health/ > /dev/null"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - net

  magnus:
    image: jumpserver/magnus:${VERSION}
    container_name: jms_magnus
    ulimits:
      core: 0
    restart: always
    tty: true
    env_file:
      - ${CONFIG_FILE}
    ports:
      - ${MAGNUS_PORTS:-30000-30100}:${MAGNUS_PORTS:-30000-30100}
    volumes:
      - ${VOLUME_DIR}/magnus/data:/opt/magnus/data
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "ps axu | grep -v 'grep' | grep magnus"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - net

  web:
    image: jumpserver/web:${VERSION}
    container_name: jms_web
    ulimits:
      core: 0
    restart: always
    tty: true
    environment:
      HTTP_PORT: ${HTTP_PORT:-80}
      USE_IPV6: ${USE_IPV6:-0}
      CLIENT_MAX_BODY_SIZE: ${CLIENT_MAX_BODY_SIZE:-4096m}
    ports:
      - ${HTTP_PORT:-80}:${HTTP_PORT:-80}
    volumes:
      - ${VOLUME_DIR}/core/data:/opt/jumpserver/data
      - ${VOLUME_DIR}/nginx/data/logs:/var/log/nginx
    depends_on:
      core:
        condition: service_healthy
    healthcheck:
      test: "curl -fs http://localhost:$${HTTP_PORT}/ > /dev/null"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - net



























